clustername cluster1
port 1883
websocket_port 18883
host 172.16.8.90
#*********************************************************************
#集群配置
# cluster true 启动 false 单例启动
#hazelcast.configuration    集群配置文件
#*********************************************************************
cluster true
hazelcast.configuration /home/mqtt_v2/config/hazelcast.xml

#acl_file config/acl.conf
#*********************************************************************
#集群配置
# allow_anonymous true 允许匿名登陆  false 不允许匿名登陆
#*********************************************************************
allow_anonymous true
#*********************************************************************
#集群配置
# allow_zero_byte_client_id true 允许不携带客户id  false 不允许不携带客户id
#*********************************************************************
allow_zero_byte_client_id false
#*********************************************************************
#集群配置
# authenticator_class 安全认证的包名 利用反射机制实现 可实现 IAuthenticator 进行重写
# 目前数据源连接方式是jdbc方式连接数据源
#集群配置
# authenticator_class 安全认证的包名 利用反射机制实现 可实现 IAuthenticator 进行重写
# 目前数据源是mysql
#*********************************************************************
#*********************************************************************
authenticator.db.driver com.mysql.jdbc.Driver
authenticator.db.url jdbc:mysql://127.0.0.1:3306/mqtt
authenticator.db_sqlusername root
authenticator.db_sqlpassword 123456
authenticator.db_sqlMaxPoolSize 10
authenticator.db_sqlminPoolSize 5
authenticator.db_sqlInitialPoolSize 5
authenticator.db_sqlMaxStatements 10
authenticator.db_sqlMaxIdleTime 10000
authenticator_class io.moquette.spi.impl.security.AuthDbConnectPool
authenticator.db.query select id from mqtt_user where username=? And password=? and clientid=? Limit 1
authorizator_class io.moquette.spi.impl.security.ACLDBAuth
ACL.db.read.query select id from mqtt_acl where clientid=? And topic=? And allow=1 and access=1 or access=3  Limit 1
ACL.db.write.query select id from mqtt_acl where clientid=? And topic=? And allow=1 and access=2 or access=3  Limit 1
#*********************************************************************
#
# authenticator.db.digest 密码解密的方式
#*********************************************************************
authenticator.db.digest SHA-256




#*********************************************************************
#自定义拦截器 包路径 多个拦截器 可用逗号隔开
#
#*********************************************************************
#intercept.handler io.moquette.interception.hazelcastHandler.HazelcastInterceptHandler
#*********************************************************************
#底层使用epoll 或者nio
#*********************************************************************
netty.epoll true
#mqtt 包大小 默认即可
netty.mqtt.message_size 8092
#*********************************************************************
#设置后 改topic的前缀的数据都不进行迭代传输 只做数据存储
# 存储的数据 落地到kafka
# 后期进行抽象 实现自己的落地db点
#*********************************************************************
#passthrough data
#Kafkaservers 172.16.10.218:9092
#KafkaTopic testdata

#use_metrics io.moquette.spi.impl.BrokerMetrics.Metriciml
